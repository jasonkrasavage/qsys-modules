--Author: Matt Drake
--Company: Dragon's Fire Design
--Website: http://dragonsfiredesign.com
--Build Date: 04/2020

PluginInfo =
{
	Name = "PIN Pad",
	Version = "0.2.8",
	Id = "671df5b9-e296-44a3-b381-4bcc062d9353",
	Description = "Pin Pad",
	ShowDebug = true,
}
function GetProperties()
	props = {
		{
			Name = "Number of PINs",
			Type = "integer",
			Min = 1,
			Max = 100,
			Value = 1,
		},
		{
			Name = "Log Entries",
			Type = "boolean",
			Value = true,
		},
	}
	return props
end

function GetControls(props)
  return {
		{
			Name = "code",
			ControlType = "Text",
			PinStyle = "Input",
			Count = 1,
		},
				{
			Name = "Touch Activity",
			ControlType = "Indicator",
			IndicatorType = "LED",
			PinStyle = "Input",
			Count = 1,
			UserPin = true,
		},
		{
			Name = "PinNum",
			ControlType = "Button",
			ButtonType = "Trigger",
			Count = 10,
			--PinStyle = "Both",
			UserPin = true,
		},
		{
			Name = "Reset",
			ControlType = "Button",
			ButtonType = "Trigger",
			Count = 1,
			PinStyle = "Both",
			UserPin = true,
		},
		{
			Name = "Submit",
			ControlType = "Button",
			ButtonType = "Trigger",
			Count = 1,
			PinStyle = "Both",
			UserPin = true,
		},
		{
			Name = "Logoff",
			ControlType = "Button",
			ButtonType = "Trigger",
			Count = 1,
			PinStyle = "Both",
			UserPin = true,
			IconType = "Image",
			Icon = "",
		},
		{
			Name = "UCI",
			ControlType = "Text",
			Count = 1,
			UserPin = true,
			PinStyle = "Output",
		},
		{
			Name = "Lock Page",
			ControlType = "Text",
			Count = 1,
		},
		{
			Name = "Pins",
			ControlType = "Text",
			Count = props["Number of PINs"].Value,
		},
		{
			Name = "Pages",
			ControlType = "Text",
			Count = props["Number of PINs"].Value,
		},
		{
			Name = "Timeout", --Timeout in Seconds--
			ControlType = "Knob",
			ControlUnit = "Seconds",
			Min = 0,
			Max = 86400,
			Value = 60,
			Count = 1,
		}
	}
end

function GetPages()
  return {
    { name = "Pad" },
    { name = "Pages" }
  }
end

function GetControlLayout(props)
	local layout = {}
	local graphics = {}
--	layout.code = {PrettyName="code",Style="Text",Position={1,11},Size={1,1},IsInvisible = true} -- This is to draw a code pin

	if props['page_index'].Value==1 then
  local font = "Noto Serif"
  local fontstyle = "Bold"
  local fontsize = 30

	layout["PinNum 1"] = {
			Style = "Button",
			Legend = "1",
			ButtonStyle = "Trigger",
			Position = { 10,8 },
			Size = { 87,69 },
			CornerRadius = 25,
			ButtonVisualStyle = "Gloss",
			Margin = 2,
			Font = font,
			FontStyle = fontstyle,
			FontSize = fontsize,
		}
	layout["PinNum 2"] = {
			Style = "Button",
			Legend = "2",
			ButtonStyle = "Trigger",
			Position = { 104,8 },
			Size = { 87,69 },
			CornerRadius = 25,
			ButtonVisualStyle = "Gloss",
			Margin = 2,
			Font = font,
			FontStyle = fontstyle,
			FontSize = fontsize,
		}
	layout["PinNum 3"] = {
			Style = "Button",
			Legend = "3",
			ButtonStyle = "Trigger",
			Position = { 194,8 },
			Size = { 87,69 },
			CornerRadius = 25,
			ButtonVisualStyle = "Gloss",
			Margin = 2,
			Font = font,
			FontStyle = fontstyle,
			FontSize = fontsize,
		}
	layout["PinNum 4"] = {
			Style = "Button",
			Legend = "4",
			ButtonStyle = "Trigger",
			Position = { 10,78 },
			Size = { 87,69 },
			CornerRadius = 25,
			ButtonVisualStyle = "Gloss",
			Margin = 2,
			Font = font,
			FontStyle = fontstyle,
			FontSize = fontsize,
		}
	layout["PinNum 5"] = {
			Style = "Button",
			Legend = "5",
			ButtonStyle = "Trigger",
			Position = { 104,78 },
			Size = { 87,69 },
			CornerRadius = 25,
			ButtonVisualStyle = "Gloss",
			Margin = 2,
			Font = font,
			FontStyle = fontstyle,
			FontSize = fontsize,
		}
	layout["PinNum 6"] = {
			Style = "Button",
			Legend = "6",
			ButtonStyle = "Trigger",
			Position = { 194,78 },
			Size = { 87,69 },
			CornerRadius = 25,
			ButtonVisualStyle = "Gloss",
			Margin = 2,
			Font = font,
			FontStyle = fontstyle,
			FontSize = fontsize,
		}
	layout["PinNum 7"] = {
			Style = "Button",
			Legend = "7",
			ButtonStyle = "Trigger",
			Position = { 10,156 },
			Size = { 87,69 },
			CornerRadius = 25,
			ButtonVisualStyle = "Gloss",
			Margin = 2,
			Font = font,
			FontStyle = fontstyle,
			FontSize = fontsize,
		}
	layout["PinNum 8"] = {
			Style = "Button",
			Legend = "8",
			ButtonStyle = "Trigger",
			Position = { 104,156 },
			Size = { 87,69 },
			CornerRadius = 25,
			ButtonVisualStyle = "Gloss",
			Margin = 2,
			Font = font,
			FontStyle = fontstyle,
			FontSize = fontsize,
		}
	layout["PinNum 9"] = {
			Style = "Button",
			Legend = "9",
			ButtonStyle = "Trigger",
			Position = { 194,156 },
			Size = { 87,69 },
			CornerRadius = 25,
			ButtonVisualStyle = "Gloss",
			Margin = 2,
			Font = font,
			FontStyle = fontstyle,
			FontSize = fontsize,
		}
	layout["PinNum 10"] = {
			Style = "Button",
			Legend = "0",
			ButtonStyle = "Trigger",
			Position = { 104,228 },
			Size = { 87,69 },
			CornerRadius = 25,
			ButtonVisualStyle = "Gloss",
			Margin = 2,
			Font = font,
			FontStyle = fontstyle,
			FontSize = fontsize,
		}
	layout["Reset"] = {
			Style = "Button",
			Legend = "Reset",
			ButtonStyle = "Trigger",
			Position = { 10,228 },
			Size = { 87,69 },
			CornerRadius = 25,
			ButtonVisualStyle = "Gloss",
			Margin = 2,
			Font = font,
			FontStyle = fontstyle,
			FontSize = fontsize,
		}
	layout["Submit"] = {
			Style = "Button",
			Legend = "Submit",
			ButtonStyle = "Trigger",
			Position = { 194,228 },
			Size = { 87,69 },
			CornerRadius = 25,
			ButtonVisualStyle = "Gloss",
			Margin = 2,
			Font = font,
			FontStyle = fontstyle,
			FontSize = fontsize,
		}
	layout["Logoff"] = {
			Style = "Button",
			ButtonStyle = "Trigger",
			UserPin = true,
			PinStyle  = "Both",
			Position = { 85,305 },
			Size = { 126,117 },
			Color = { 124,124,124 },
			UnlinkOffColor = true,
			OffColor = { 255,255,255 },
		}
	local graphics = {
		{
			Type = "GroupBox",
			StrokeWidth = 2,
			CornerRadius = 8,
			Position = { 0,0 },
			Size = { 287,305 },
		},
	}
	return layout,graphics;

elseif props['page_index'].Value==2 then
		layout["Lock Page"] = {
			Style = "Text",
			Position = { 100,6 },
			Size = { 172,23 },
		}
		layout["UCI"] = {
			Style = "Text",
			Position = { 100,29 },
			Size = { 172,23 },
			IsReadOnly = true,
		}
--		layout["Touch Activity"] = {
--			Style = "LED",
--			Position = { 0,0 },
--			Size = { 16,16 },
--		}
		layout["Timeout"] = {
			Style = "Fader",
			Position = { 23,24 },
			Size = { 36,129 },
			ShowTextbox = true,
		}
		for i=1,props["Number of PINs"].Value do
			local ctl = tostring(props["Number of PINs"].Value==1 and "" or " "..i)
			layout["Pins"..ctl] = {
				Style = "Text",
				Position = { 75,72+(i*29) },
				Size = { 100,29 },
				Radius = 3,
				Margin = 2,
			}
			layout["Pages"..ctl] = {
				Style = "Text",
				Position = { 178,72+(i*29) },
				Size = { 100,29 },
				Radius = 3,
				Margin = 2,
			}
		end

		local graphics = {
		{
			Type = "Label",
			Text = "Lock Page",
			TextSize = 14,
			HTextAlign = "Center",
			Position = { 10,6 },
			Size = { 90,23 },
		},
		{
			Type = "Label",
			Text = "UCI",
			TextSize = 14,
			HTextAlign = "Center",
			Position = { 63,30 },
			Size = { 37,21 },
		},
		{
			Type = "Label",
			Text = "PINs",
			TextSize = 14,
			HTextAlign = "Center",
			Position = { 79,72 },
			Size = { 100,29 },
		},
		{
			Type = "Label",
			Text = "Pages",
			TextSize = 14,
			HTextAlign = "Center",
			Position = { 182,72 },
			Size = { 100,29 },
		},
		{
			Type = "Label",
			Text = "Timeout (Seconds)",
			TextSize = 14,
			HTextAlign = "Center",
			Position = { 10,153 },
			Size = { 62,29 },
		},
	}
	return layout,graphics;
	end --End If

end --end Function

if Controls then
--Code--
pass = {}
ongoing = null
touchTimer = Timer.New()

for i in ipairs(Controls["PinNum"]) do
Controls["PinNum"][i].EventHandler = function() lock(i) end  --Assign EventHandler to inputs
end

if Properties["Number of PINs"].Value==1 then 
	Controls["Pins"].EventHandler = function() BuildPass() end
	Controls["Pages"].EventHandler = function() BuildPass() end
else
	for i in ipairs(Controls["Pins"]) do
		Controls["Pins"][i].EventHandler = function() BuildPass() end
		Controls["Pages"][i].EventHandler = function() BuildPass() end
	end
end

Controls["Submit"].EventHandler = function() solve() end --Check Combo
Controls["Logoff"].EventHandler = function() 
	Controls["UCI"].String = Controls["Lock Page"].String
	touchTimer:Stop()
 end --Return to Lock Page (Logoff Button)
Controls["Touch Activity"].EventHandler = function()
	if Controls["Touch Activity"].Boolean == true then
		touchTimer:Stop() --Stop Timer
		print("Touch Timer Stopped")
	else
		touchTimer:Stop() --Stop Timer
		touchTimer:Start(Controls["Timeout"].Value) --Restart Timer
		print("Touch Timer Restarted")
	end
end

function BuildPass()
	if Properties["Number of PINs"].Value==1 then 
		pass[Controls["Pins"].String] = Controls["Pages"].String
	else
  		for i,v in ipairs(Controls["Pins"]) do
    		pass[v.String] = Controls["Pages"][i].String
--   		print("Index: "..i, "Value: "..v.String, "Pass: "..pass[v.String]) --Debug
  		end
  	end
end

function lock(current) --Parses the inputs
  if current == 10 then current = 0 end --If button pressed is 0 make sure current shows correct
  if ongoing==null then ongoing=current else --If nothing has been input yet, start ongoing
    ongoing=ongoing..current --Append new digit to ongoing PIN
  end
--print (ongoing) --Debug
end

function solve() --Select which interface depending on Pin, or reset if Pin wrong
  if pass[ongoing] == nil or pass[ongoing] == "" then wrong()
  else
    print(os.date(), "Acess Granted "..pass[ongoing]) --Debug
    if Properties["Log Entries"] == true then Log.Message("Acess Granted "..pass[ongoing]) end --Debug to Event Log
    Controls["UCI"].String = pass[ongoing]
    if Controls["Timeout"].Value ~= 0 then touchTimer:Start(Controls["Timeout"].Value) end
  end
  ongoing=null
end

function wrong() --Reset if incorrect pin
  print(os.date(), "Access Denied Wrong PIN - Resetting") --Debug
  if Properties["Log Entries"] == true then Log.Message("Access Denied Wrong PIN - Resetting") end --Debug to Event Log
  ongoing=null --Reset Ongoing
  for i in ipairs(Controls["PinNum"]) do
    Controls["PinNum"][i].Color = "Red"
  end --Change Pin Pad color to red briefly
  Timer.CallAfter(function()
    for i in ipairs(Controls["PinNum"]) do
      Controls["PinNum"][i].Color = ""
    end
    Controls["UCI"].String = Controls["Lock Page"].String
    touchTimer:Stop()
  end ,.35)  --Reset Pin Pad color and Controls["Lock Page"].String after delay
end
Controls["Reset"].EventHandler = function() wrong() end --Reset Combo

touchTimer.EventHandler = function()
  print("System Locked due to Timeout")
  Controls.UCI.String = Controls["Lock Page"].String
  touchTimer:Stop()
end

--Script Startup--
	BuildPass()
	Controls["UCI"].String = Controls["Lock Page"].String

	--End Code--
end